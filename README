Copyright (C) 2003-2009 Institute for Systems Biology
                        Seattle, Washington, USA.

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; If not, see <http://www.gnu.org/licenses/>.
=======================================================================


This is a provisional readme file for BioVisualization, a set of  browser 
independent Google Visuailzation API compliant biology oriented visualizations 
implemented in javascript and actionscript 3. Please feel free to 
edit and expand it. If something you need to do is not covered here contact 
us and we will update it.

Before starting you should read the google Visualization API documents 
to learn the basics of creating a data table and using API compliant 
visualizations:
	http://code.google.com/apis/visualization/
	
Table of Contents

1.  Getting set up in Flex Builder and building code.
2. BioNetwork Parmaters
3. BioHeatmap Parmaters
4. Deploying on a server
5. Creating your own visualization using flexvistemplate
6. List of Dependencies

1.  Getting set up in Flex Builder and building code.

	-creat your own fork on github if you wish to develop against the code
	(see: http://github.com/guides/fork-a-project-and-submit-your-modifications)

	-check out from github using a command like: 
	git clone git@github.com:YOURUSERNAME/Lichen.git (if you have forked)
	git clone git://github.com/ryanbressler/Lichen (if you do not wish to fork)
	
	- open flex builder and go to file>New>ActionScript Project
	set the path to your Lichen dir and the name to Lichen
	and hit finish.
	
	- go to project>properties. Go to actionscript build path, and then go to the
	lib dir tab, click the add swc folder hit 'browse' button, and choose the 
	Lichen/lib sub dir.
	
	- Set bionetwork.as, bioheatmap.as or flexvistemplate.as as your default 
	executable (use theright click menu)
	
	- delete the contents of your html-template dir  and src/lichen.as 
	(to get rid of all auto generated stuff).
	
	- go to the Lichen dir in a shell and run: 
		git checkout html-template
	 to recreate the files in html-template from github.
	
	- Hit the build button and wait. A browser with bionetwork.html should come
	up, you can open any of the other html files at this point.
	
	- If you encounter a security zone error there are two possible fixes:
		1) Ensure there are no spaces in the path to the html file.
		
	 	2) Serve the Lichen/bin-debug directory with a web server then go to Project/Properties, 
	 	ActionScript Build Path, and set Output Folder URL to the URL where the bin-debug file 
	 	can be found (example: http://localhost/Lichen).
	
	- Make sure the swf is built in bin-debug. Then you 
	can go to bin-debug folder and open any html files under that folder.
	
	You may need to change the font family being embeded if your system does not have helvetica installed

2. BioNetwork Parameters


	Data Format:
	
		(first three columns are fixed, the rest are based on column names)
			-[0]->edge_id
			-[1]->(v->interactor_value1, f->interactor_name1)
			-[2]->(v->interactor_value2, f->interactor_name2)
			-sources->comma separated list
			-directed->boolean
	Options:

		Additional Data Options:
			layout_data
				-shape->Circle, Square, Diamond, TriangleDown, TriangleUp, TriangleRight, TriangleLeft, Cross
				-color->hex string
				-size (integer)
		 
			attributes 
				-Currently specific to GO
		
			node_data 
				-anything with "t_(*)" gets interpreted as a timepoint. example: t_0, t_1, etc
	
		Control Options:
		
			clickdrag [true|false (default)] 
				-Allows nodes to be dragged around and relocated
			sproutable
				-(Alpha) lets node expanded to add neigbhoring nodes
				
		Layout Options:
			layout_type:
				Circular
				Random
				ForceDirected
					defaultParticleMass
					defaultSpringLength
					defaultSpringTension
					defaultSpringDamping
					3DForceDirectedLayout
					RadialTreeLayout
					GoogleDataTableDriven 
					BundledEdges  
					CircularWCenter
						-center 
					SVDLayout
		
		Node renderering options:
			CircularHeatmap
				maxValue
				minValue	
				maxColor
				minColor
				maxColors (number of colors)
		
		Edge renderering option:
			MultiEdge
		
		Legend options:
			visible
			need to have a way to spec out layout
	
		
		Apearance Options:
			padding
			width
			height
			selection_display = "all" || "none" || "edges" || "nodes"
			selection_persistDisplay = false
			selection_lineColor = default is no change specified as 0x...
			selection_lineWidth = 3
			selection_lineAlpha = 1
		
	
	Events:
		select
		nodeclick {node:{name:ns.data.name}}
		edgeclick {edge:{}} //TODO: put something in here


Everything other than the data (graph data) is nested in the options hash per Google's Visualization API

Example: layout:{layout_type: 'ForceDirected', defaultParticleMass: '1', defaultSpringLength: '30', defaultSpringTension: '0.3', defaultSpringDamping:'0.1'}


3. BioHeatmap Parmaters
	data:
		A google api datatable with numeric or string values, Column names and a row lable column in column 0.
		
		Strings will be parsed as numbers with the exception of special values Y and N
		
		If you provide row and column base urls (see below) the column id and column 0 value will be
		appended to them for links from the column and row lables.
		
	Options:
		noRowNames
			Indicates col 0 in the data is data not row lables. Redundent with use rowlables.
		startColor
		endColor
		emptyDataColor
		numberOfColors
		passThroughBlack
		lockHeaders
			No longer used
		useRowLabels=true
			Indicates col 0 in the data is row lables and not data. Redundent with use noRowNames.
		useCellLabels
		rowBaseUrl
		columnBaseUrl
		_cellBaseUrl
		cellWidth
		cellHeight
		mapWidth
		mapHeight
			Specifying mapWidth and mapHeight will cause cellWidht and cellHeight to be calculated dynamically.
		fontHeight
		horizontalPadding=10
		verticalPadding=10
		verticle
		cellBorder
		drawBorder
		selectionDisplay: {mode :  "flash" || "highlight" || "none", 
		        			fill:{color:{ r: 0, g: 0, b: 0, a: .5 }}, 
		        			border:{width:2,color:{ r: 0, g: 0, b: 0, a: 1 }}
		        			}
		    How to display the selection rectangles and what colors to use
		        			
		cellToolTips:  "value" || "none" || "headers"
			The type of tool tips to use on the heatmap cells
		
		hideHeaders
			hide row and columne headers
		hideColHeaders
			hide col headers
		hideRowHeaders
			hide row headers regardless of weather row 0 is data or lables.
		
		TODO:
		_specialValueColor
	Events:
		select
		
4. Deploying on a server
	To deploy a visualization on a server you need to host the associated js and swf files. 
	Currentley, if you wish to host these files in a seperate directory you need to edit the path
	to the swf file in two places in the embed tag string. You can do this using find and replace 
	(EX bionetwork.swf -> /js/bionetwork.swf).
	
	We are looking for a more maintainable solution if anybody has any ideas.

5. Creating your own visualization using flexvistemplate

	The easiest way to start work on your own visualization is to create a copy of flexvistemplate.as,
	flexvistemplate.js and flexvistemplate.html. and use find and replace to update all occurences of
	flexvistemplate (should be mostly file names) and FlexVisTemplate (class names).
	
	After you have done this you can verify that everything is working using the debuger. Set your 
	new as file as the default executable, set a break point in the draw function after data import and 
	compile and run in debug mode.
	
6. List of Dependencies (Track Versions Here as we update)
	corelib.swc
		http://code.google.com/p/as3corelib/
	flare.swc
		http://flare.prefuse.org/
	com.clevr.*
		http://clevrlib.riaforge.org/
	FlexUnit.swc (Not currentley used?)